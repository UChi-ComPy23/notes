Traceback (most recent call last):
  File "/home/goodwill/miniconda3/envs/pycourse_test/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/goodwill/miniconda3/envs/pycourse_test/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/goodwill/miniconda3/envs/pycourse_test/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/goodwill/miniconda3/envs/pycourse_test/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/goodwill/miniconda3/envs/pycourse_test/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/goodwill/miniconda3/envs/pycourse_test/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/goodwill/miniconda3/envs/pycourse_test/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from numba import jit

@jit(nopython=True) # throws error if not able to compile
def numba_matvec_row(A, x):
    """
    naive matrix-vector multiplication implementation
    
    Loops over rows in outer loop
    """
    m, n = A.shape
    y = np.zeros(m)
    for i in range(m):
        for j in range(n):
            y[i] = y[i] + A[i,j] * x[j]
    
    return y


@jit(nopython=True) # throws error if not able to compile
def numba_matvec_col(A, x):
    """
    naive matrix-vector multiplication implementation
    
    Loops over columns in outer loop
    """
    m, n = A.shape
    y = np.zeros(m)
    for j in range(n):
        for i in range(m):
            y[i] = y[i] + A[i,j] * x[j]
    
    return y

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[13], line 1[0m
[0;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mnumba[39;00m [38;5;28;01mimport[39;00m jit
[1;32m      3[0m [38;5;129m@jit[39m(nopython[38;5;241m=[39m[38;5;28;01mTrue[39;00m) [38;5;66;03m# throws error if not able to compile[39;00m
[1;32m      4[0m [38;5;28;01mdef[39;00m [38;5;21mnumba_matvec_row[39m(A, x):
[1;32m      5[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m      6[0m [38;5;124;03m    naive matrix-vector multiplication implementation[39;00m
[1;32m      7[0m [38;5;124;03m    [39;00m
[1;32m      8[0m [38;5;124;03m    Loops over rows in outer loop[39;00m
[1;32m      9[0m [38;5;124;03m    """[39;00m

[0;31mModuleNotFoundError[0m: No module named 'numba'

